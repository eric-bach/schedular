name: deploy

on:
  # pull_request:
  #   types:
  #     - closed
  #   branches:
  #     - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      actions: write
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Backend and Sources
        uses: ./.github/actions/backend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_SERVICE_ROLE_PROD }}
          aws-region: ${{ secrets.CDK_DEFAULT_REGION }}

      - name: CDK Deploy Backend
        run: npm run deploy-backend prod
        env:
          CERTIFICATE_ARN: ${{secrets.CERTIFICATE_ARN_PROD}}
          SENDER_EMAIL: ${{secrets.SENDER_EMAIL}}
        working-directory: backend

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Frontend
        uses: ./.github/actions/frontend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_SERVICE_ROLE_PROD }}
          aws-region: us-east-1

      # - name: Build Frontend
      #   run: npm run build-all-frontend
      #   working-directory: backend

      - name: CDK Deploy Frontend
        run: npm run deploy-frontend prod
        env:
          CERTIFICATE_ARN: ${{secrets.CERTIFICATE_ARN_PROD}}
        working-directory: backend
